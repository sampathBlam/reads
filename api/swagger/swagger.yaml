swagger: "2.0"
info:
  description: "This is the backend server for the Reads system"
  version: "1.0.0"
  title: "Reads"
  contact:
    email: "sampath3493@gmail.com"
# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /books:
    x-swagger-router-controller: books
    get:
      description: Returns the list of books
      # used as the method name of the controller
      operationId: getBooks
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/BookListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add a book
      # used as the method name of the controller
      operationId: addBook
      parameters:
      - in: "body"
        name: "book"
        description: "Book object to be added"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        "201":
          description: Created
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Book"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /books/{bookId}:          
    x-swagger-router-controller: books
    put:
      description: Update a book
      # used as the method name of the controller
      operationId: updateBookById
      parameters:
      - in: "path"
        name: "bookId"
        description: "Id of the Book to be updated"
        required: true
        type: string
      - in: "body"
        name: "book"
        description: "Book object to be updated"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        "200":
          description: Updated
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Book"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Get details of a book by its ID
      # used as the method name of the controller
      operationId: getBookById
      parameters:
      - in: "path"
        name: "bookId"
        description: "Id of the book to be retrieved"
        required: true
        type: string
      responses:
        "200":
          description: Retrieved book object
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Book"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete a book by its ID
      # used as the method name of the controller
      operationId: deleteBookById
      parameters:
      - in: "path"
        name: "bookId"
        description: "Id of the book to be deleted"
        required: true
        type: string
      responses:
        "200":
          description: Deleted book successfully
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /swagger:
    x-swagger-pipe: swagger_raw

     
# complex objects have schema definitions
definitions:

  Book:
      type: object
      required:
        - name
        - author
        - owner
        - status
      properties:
        _id:
          type: string
        name:
          type: string
        author:
          type: string
        type:
          type: string
        language: 
          type: string
        genre: 
          type: string
        owner:
          type: string
        status:
          type: string
        borrower:
          type: string
        borrowedDate:
          type: string
        returnedDate:
          type: string
        wishlist:
          type: array
          items:
            type: string
        comments: 
          type: array
          items:
            type: string

  BookListResponse:
    required:
      - books
    properties:
      books:
        type: array
        items:
          $ref: '#/definitions/Book'

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

          